{"cells":[{"cell_type":"markdown","metadata":{"id":"ZRqRTVKzj4nv"},"source":["[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1lsJaqWYR2bNaz2zt2XMTesJqZw64KMyh)"]},{"cell_type":"markdown","source":["## SETUP"],"metadata":{"id":"_z09Ub43CreX"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"45IGBVWej4n7"},"outputs":[],"source":["from google.colab import output\n","\n","nvidia_output = !nvidia-smi --query-gpu=memory.total --format=noheader,nounits,csv\n","gpu_memory = int(nvidia_output[0])\n","if gpu_memory < 14000:\n","  output.eval_js('new Audio(\"https://upload.wikimedia.org/wikipedia/commons/0/05/Beep-09.ogg\").play()')\n","  warning_string = f\"--> GPU check: ONLY {gpu_memory} MiB available: Please use low quality or low res <--\"\n","  print(warning_string)\n","  output.eval_js('alert(\"Warning - low GPU (see message)\")')\n","else:\n","  print(f\"GPU check: {gpu_memory} MiB available: this should be fine\")\n","\n","print(\"Installing...\")\n","from IPython.utils import io\n","with io.capture_output() as captured:\n","  !rm -Rf pixray\n","  !git clone --recursive https://github.com/pixray/pixray\n","  !pip install -r pixray/requirements.txt\n","  !pip uninstall -y tensorflow \n","  !git clone https://github.com/pixray/diffvg\n","  %cd diffvg\n","  !git submodule update --init --recursive\n","  !python setup.py install\n","  %cd ..\n","  !pip freeze | grep torch\n","\n","import os\n","if not os.path.isfile(\"first_init_complete\"):\n","  # put stuff in here that should only happen once\n","  !mkdir -p models\n","  os.mknod(\"first_init_complete\")\n","  result_msg = \"Please choose Runtime -> Restart Runtime from the menu to continue!\"\n","else:\n","  result_msg = \"Setup Complete! Good luck with your drawing\"\n","\n","js_code = f'''\n","document.querySelector(\"#output-area\").appendChild(document.createTextNode(\"{result_msg}\"));\n","'''\n","js_code += '''\n","for (rule of document.styleSheets[0].cssRules){\n","  if (rule.selectorText=='body') break\n","}\n","rule.style.fontSize = '30px'\n","'''\n","display(IPython.display.Javascript(js_code))"]},{"cell_type":"markdown","metadata":{"id":"oR94lDnzj4oA"},"source":["## PIXRAY"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4CR49Fu3j4oB"},"outputs":[],"source":["#@title Easy Settings\n","\n","#@markdown Let's take a prompt and try drawing with a number\n","#@markdown of different models. The models we will be using are\n","#@markdown VQGAN models which mainly differ on the trained data\n","#@markdown and architecture. Swapping the model will make the result\n","#@markdown look differnt. For example: \"wikiart\" is trained on\n","#@markdown artwork and so draws things less photorealistic.\n","\n","#@markdown Best bet: just try different models out and see what happens.\n","\n","import sys\n","sys.path.append(\"pixray\")\n","\n","prompts = \"strange aura in the style of Theodor Severin Kittelsen\" #@param {type:\"string\"}\n","\n","vqgan_model = \"wikiart_16384\" #@param [\"imagenet_f16_16384\", \"imagenet_f16_1024\", \"openimages_f16_8192\", \"wikiart_1024\", \"wikiart_16384\", \"coco\"]\n","\n","quality = \"best\" #@param [\"draft\", \"normal\", \"better\", \"best\"]\n","\n","aspect = \"widescreen\" #@param [\"widescreen\", \"square\", \"portrait\"]\n","\n","#@markdown When you have the settings you want, press the play button on the left.\n","#@markdown We will apply these settings below."]},{"cell_type":"code","source":["# Simple setup from menu choices\n","import pixray\n","pixray.reset_settings()\n","pixray.add_settings(prompts=prompts)\n","pixray.add_settings(drawer=\"vqgan\", vqgan_model=vqgan_model)\n","pixray.add_settings(quality=quality, aspect=aspect)\n","pixray.add_settings(display_clear=True)\n","\n","# hey, let's try that new RN50x16 CLIP model huh?\n","pixray.add_settings(clip_models=\"RN50x16\")\n","\n","# examples below start with '#\" are comments and do not get run\n","# pixray.add_settings(init_image=\"file.png\")\n","# pixray.add_settings(init_image_alpha=200)\n","# pixray.add_settings(overlay_image=\"file.png\")\n","# pixray.add_settings(image_prompts=\"file.png\")\n","# pixray.add_settings(overlay_every=20)\n","# pixray.add_settings(seed=42)\n","# pixray.add_settings(display_every=50)\n","# pixray.add_settings(iterations=200)\n","# pixray.add_settings(size=[256, 256])\n","# pixray.add_settings(vector_prompts=\"textoff:4\")\n","\n","# if you enable drawers below make sure to disable the \"vqgan_model\" line above\n","# pixray.add_settings(drawer=\"fft\")\n","# pixray.add_settings(drawer=\"pixel\")\n","# pixray.add_settings(drawer=\"vdiff\")\n","\n","# change from CLIP guided to SLIP guided by enabling this line\n","# pixray.add_settings(perceptors=\"slip\")"],"metadata":{"id":"UZPrttWxC_Kt"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"name":"Text2Art","provenance":[{"file_id":"https://github.com/mfrashad/text2art/blob/main/text2art.ipynb","timestamp":1650106672554}],"toc_visible":true},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"}},"nbformat":4,"nbformat_minor":0}